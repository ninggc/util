<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ninggc.template.springbootfastdemo.project.dao.SmsRecordMapper">
  <resultMap id="BaseResultMap" type="com.ninggc.template.springbootfastdemo.project.domain.BdSmsRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="relative_id" jdbcType="BIGINT" property="relativeId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="send_date" jdbcType="TIMESTAMP" property="sendDate" />
    <result column="batch_id" jdbcType="VARCHAR" property="batchId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="complete_date" jdbcType="TIMESTAMP" property="completeDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ninggc.template.springbootfastdemo.project.domain.BdSmsRecord">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type, relative_id, phone, send_date, batch_id, status, complete_date, 
    update_date, create_date, delete_flag
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ninggc.template.springbootfastdemo.project.domain.SMSRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bd_sms_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ninggc.template.springbootfastdemo.project.domain.SMSRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from bd_sms_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bd_sms_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bd_sms_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ninggc.template.springbootfastdemo.project.domain.BdSmsRecord">
    insert into bd_sms_record (id, user_id, type, 
      relative_id, phone, send_date, 
      batch_id, status, complete_date, 
      update_date, create_date, delete_flag, 
      description)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{relativeId,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{sendDate,jdbcType=TIMESTAMP}, 
      #{batchId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{completeDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ninggc.template.springbootfastdemo.project.domain.BdSmsRecord">
    insert into bd_sms_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="relativeId != null">
        relative_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sendDate != null">
        send_date,
      </if>
      <if test="batchId != null">
        batch_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="completeDate != null">
        complete_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="relativeId != null">
        #{relativeId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="batchId != null">
        #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="completeDate != null">
        #{completeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ninggc.template.springbootfastdemo.project.domain.BdSmsRecord">
    update bd_sms_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="relativeId != null">
        relative_id = #{relativeId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        send_date = #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="batchId != null">
        batch_id = #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="completeDate != null">
        complete_date = #{completeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ninggc.template.springbootfastdemo.project.domain.BdSmsRecord">
    update bd_sms_record
    set user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      relative_id = #{relativeId,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      send_date = #{sendDate,jdbcType=TIMESTAMP},
      batch_id = #{batchId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      complete_date = #{completeDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ninggc.template.springbootfastdemo.project.domain.BdSmsRecord">
    update bd_sms_record
    set user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      relative_id = #{relativeId,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      send_date = #{sendDate,jdbcType=TIMESTAMP},
      batch_id = #{batchId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      complete_date = #{completeDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>